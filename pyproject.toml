[tool.poetry]
name = "fastrpa"
version = "0.1.0"
description = "A simple to use abstraction over Selenium"
authors = ["Jo√£o Paulo Carvalho <jjpaulo2@protonmail.com>"]
repository = "https://github.com/jjpaulo2/fastrpa"
readme = "README.md"
include = [
    { path = "fastrpa", format = ["sdist", "wheel"] },
]
keywords = [
    "selenium",
    "rpa",
    "fastapi",
    "easy",
    "fast",
    "automation",
    "robot",
    "browser"
]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jjpaulo2/fastrpa/issues"

[tool.poetry.dependencies]
python = "^3.10"
selenium = "^4.22.0"
requests = "^2.32.3"
types-requests = "^2.32.0.20240622"
rich = {version = "^13.7.1", optional = true}

[tool.poetry.extras]
debug = ["rich"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.1"
mypy = "^1.10.1"
pytest = "^8.3.2"
pytest-randomly = "^3.15.0"
taskipy = "^1.13.0"
bandit = "^1.7.9"
mkdocs = "^1.6.0"
mkdocs-material = {extras = ["imaging"], version = "^9.5.30"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.taskipy.tasks]
tests = { cmd = "pytest", help = "Runs all unit tests" }
lint = { cmd = "ruff format && ruff check --fix", help = "Format and lint the code" }
security = { cmd = "bandit -c pyproject.toml -r fastrpa", help = "Check security issues on the code" }
check = { cmd = "ruff format --check && ruff check && mypy .", help = "Check code issues" }
docs = { cmd = "mkdocs serve", help = "Run mkdocs website" }

[tool.mypy]
exclude = [
    "debug(.*)\\.py"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vvv"
testpaths = [
    "tests",
]
